@{
    ViewData["Title"] = "Página Inicial";
}

<div class="row">
    <i>Última atualização em <span data-bind="text: lastUpdateTime"></span></i><br /><br />
    <div class="well">

        <div class="row">

            <div class="col-lg-6">

                <div class="form-group">
                    <label for="" class="control-label">Moeda de Origem</label>
                    <select class="form-control" data-bind='options: currencies,
    optionsText: "display",
    optionsValue: "value",
    value: selectedSourceCurrency'></select>
                </div>

            </div>
            @*<div class="col-lg-2">
                <div class="form-group">
                    <label for="" class="control-label">&nbsp;</label>
                    <input type="button" title="Inverter" data-bind="click: invert" value="Inverter" class="btn btn-default" style="width:100%;" />
                </div>
            </div>*@
            <div class="col-lg-6">

                <div class="form-group">
                    <label for="" class="control-label">Moeda de Destino</label>
                    <select class="form-control" data-bind='options: currencies,
    optionsText: "display",
    optionsValue: "value",
    value: selectedDestinyCurrency'></select>
                </div>

            </div>
        </div>

        <div class="row">

            <div class="col-lg-6">

                <div class="form-group">
                    <label for="" class="control-label">Valor</label>
                    <input type="number" class="form-control" data-bind="value: sourceValue" />
                </div>

            </div>
            <div class="col-lg-6">

                <div class="form-group">
                    <label for="" class="control-label">Cotação</label>
                    <input type="number" class="form-control" data-bind="value: destinyValue" />
                </div>

            </div>

        </div>

        <div class="clearfix"></div>

        <div class="row">
            <div class="form-group">
                <div class="col-md-12">
                    <input type="button" data-toggle="tooltip" data-placement="top" title="Cotação" 
                           data-bind="click: convert, enable: !loading(), value: getButtonText" value="Ver Cotação"  class="btn btn-primary pull-right" />
                </div>
            </div>
        </div>

    </div>
</div>


@section Scripts {

    <script type="text/javascript">

        // set endpoint and your access key
        var endpoint = 'list';
        var access_key = '0307515030c346d6d5fe49619b22e49f';

        moment.locale("pt-br");

        function CurrenciesCallback(content) {
            viewModel.loading(false);
            viewModel.init(content.currencies);
        }


        function Currency(value, text) {
            var self = this;
            self.value = ko.observable(value);
            self.text = ko.observable(text);

            self.display = ko.computed(function () {
                return self.text() + ' (' + self.value() + ')';
            });
        }

        function ViewModel() {

            var self = this;
            self.loading = ko.observable(false);

            self.lastUpdateTime = ko.observable(moment(new Date()).format('DD/MM/YYYY hh:mm:ss'));
            self.currencies = ko.observableArray();
            self.selectedSourceCurrency = ko.observable();
            self.selectedDestinyCurrency = ko.observable('USDBRL');
            self.sourceValue = ko.observable();
            self.destinyValue = ko.observable();

            self.getButtonText = ko.computed(function () {
                if (!self.loading())
                    return "Ver Cotação";

                return "Carregando...";
            });

            self.init = function (currencies) {

                $.each(currencies, function (i, e) {
                    self.currencies.push(new Currency(i, e));
                });

                self.selectedSourceCurrency('ARS');
                self.selectedDestinyCurrency('BRL');
            };

            self.get = function () {

                //self.loading(true);

                $.ajax({
                    url: 'http://apilayer.net/api/' + endpoint + '?access_key=' + access_key,   
                    dataType: 'jsonp',
                    jsonpCallback: 'CurrenciesCallback',
                    succcess: function (json) {
                        console.log(json.result);
                    },
                    error: function (xhr) {
                        alert('Ops! Algo deu errado. :(');
                    },
                    complete: function () {
                        self.loading(false);
                    }
                });

            };

            self.convert = function () {

                self.loading(true);

                if (!self.sourceValue()) {
                    alert("Por favor, digite um valor para continuar.");
                    return;
                }

                //var amount = self.sourceValue() || 0;
                //var sourceCurrency = 'USD' + self.selectedSourceCurrency();
                //var destinyCurrency = 'USD' + self.selectedDestinyCurrency();
                //var parameters = "?from=" + sourceCurrency + "&to=" + destinyCurrency + "&amount=" + amount;

                $.ajax({
                    type: 'GET',
                    url: 'http://localhost:53710/api/currency',
                    data: {
                        from: 'USD' + self.selectedSourceCurrency(),
                        to: 'USD' + self.selectedDestinyCurrency(),
                        amount: self.sourceValue() || 0
                    },
                    succcess: function (data) {
                    },
                    error: function (xhr) {
                        alert('Ops! Algo deu errado. :(');
                    },
                    complete: function (data) {
                        self.loading(false);

                        self.destinyValue(data.responseJSON);
                        self.lastUpdateTime(moment(new Date()).format('DD/MM/YYYY hh:mm:ss'));
                    }
                });

            };

            self.invert = function () {

            };

            self.get();
        }

        var viewModel = new ViewModel();
        ko.applyBindings(viewModel);

    </script>

}